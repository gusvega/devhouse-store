{"ast":null,"code":"var _jsxFileName = \"/Users/gux/Documents/GitHub/Developement/Development/Projects/ZeroToMastery/Master React/crwn-clothing/client/src/providers/cart/cart.provider.jsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getCartTotal } from './cart.utils';\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => {},\n  cartItems: [],\n  addItem: () => {},\n  removeItem: () => {},\n  clearItemFromCart: () => {},\n  cartItemsCount: 0,\n  cartTotal: 0\n});\n\nconst CartProvider = ({\n  children\n}) => {\n  const [hidden, setHidden] = useState(true);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n\n  const toggleHidden = () => setHidden(!hidden);\n\n  const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item));\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    setCartTotal(getCartTotal(cartItems));\n  }, [cartItems]);\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      hidden,\n      toggleHidden,\n      cartItems,\n      addItem,\n      removeItem,\n      clearItemFromCart,\n      cartItemsCount,\n      cartTotal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["/Users/gux/Documents/GitHub/Developement/Development/Projects/ZeroToMastery/Master React/crwn-clothing/client/src/providers/cart/cart.provider.jsx"],"names":["React","createContext","useState","useEffect","addItemToCart","removeItemFromCart","filterItemFromCart","getCartItemsCount","getCartTotal","CartContext","hidden","toggleHidden","cartItems","addItem","removeItem","clearItemFromCart","cartItemsCount","cartTotal","CartProvider","children","setHidden","setCartItems","setCartItemsCount","setCartTotal","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,EAA4CC,kBAA5C,EAAgEC,iBAAhE,EAAmFC,YAAnF,QAAuG,cAAvG;AAEA,OAAO,MAAMC,WAAW,GAAGR,aAAa,CAAC;AACxCS,EAAAA,MAAM,EAAE,IADgC;AAExCC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAFkB;AAGxCC,EAAAA,SAAS,EAAE,EAH6B;AAIxCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAJuB;AAKxCC,EAAAA,UAAU,EAAE,MAAM,CAAE,CALoB;AAMxCC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CANa;AAOxCC,EAAAA,cAAc,EAAE,CAPwB;AAQxCC,EAAAA,SAAS,EAAE;AAR6B,CAAD,CAAjC;;AAWP,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM,CAAET,MAAF,EAAUU,SAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEU,SAAF,EAAaS,YAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEc,cAAF,EAAkBM,iBAAlB,IAAwCpB,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAAEe,SAAF,EAAaM,YAAb,IAA8BrB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMW,OAAO,GAAIW,IAAD,IAAUH,YAAY,CAACjB,aAAa,CAACQ,SAAD,EAAYY,IAAZ,CAAd,CAAtC;;AACA,QAAMV,UAAU,GAAIU,IAAD,IAAUH,YAAY,CAAChB,kBAAkB,CAACO,SAAD,EAAYY,IAAZ,CAAnB,CAAzC;;AACA,QAAMb,YAAY,GAAG,MAAMS,SAAS,CAAC,CAACV,MAAF,CAApC;;AACA,QAAMK,iBAAiB,GAAIS,IAAD,IAAUH,YAAY,CAACf,kBAAkB,CAACM,SAAD,EAAYY,IAAZ,CAAnB,CAAhD;;AAEArB,EAAAA,SAAS,CACR,MAAM;AACLmB,IAAAA,iBAAiB,CAACf,iBAAiB,CAACK,SAAD,CAAlB,CAAjB;AACAW,IAAAA,YAAY,CAACf,YAAY,CAACI,SAAD,CAAb,CAAZ;AACA,GAJO,EAKR,CAAEA,SAAF,CALQ,CAAT;AAQA,sBACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNF,MAAAA,MADM;AAENC,MAAAA,YAFM;AAGNC,MAAAA,SAHM;AAINC,MAAAA,OAJM;AAKNC,MAAAA,UALM;AAMNC,MAAAA,iBANM;AAONC,MAAAA,cAPM;AAQNC,MAAAA;AARM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYEE,QAZF,CADD;AAgBA,CAnCD;;AAqCA,eAAeD,YAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getCartTotal } from './cart.utils';\n\nexport const CartContext = createContext({\n\thidden: true,\n\ttoggleHidden: () => {},\n\tcartItems: [],\n\taddItem: () => {},\n\tremoveItem: () => {},\n\tclearItemFromCart: () => {},\n\tcartItemsCount: 0,\n\tcartTotal: 0\n});\n\nconst CartProvider = ({ children }) => {\n\tconst [ hidden, setHidden ] = useState(true);\n\tconst [ cartItems, setCartItems ] = useState([]);\n\tconst [ cartItemsCount, setCartItemsCount ] = useState(0);\n\tconst [ cartTotal, setCartTotal ] = useState(0);\n\n\tconst addItem = (item) => setCartItems(addItemToCart(cartItems, item));\n\tconst removeItem = (item) => setCartItems(removeItemFromCart(cartItems, item));\n\tconst toggleHidden = () => setHidden(!hidden);\n\tconst clearItemFromCart = (item) => setCartItems(filterItemFromCart(cartItems, item));\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetCartItemsCount(getCartItemsCount(cartItems));\n\t\t\tsetCartTotal(getCartTotal(cartItems));\n\t\t},\n\t\t[ cartItems ]\n\t);\n\n\treturn (\n\t\t<CartContext.Provider\n\t\t\tvalue={{\n\t\t\t\thidden,\n\t\t\t\ttoggleHidden,\n\t\t\t\tcartItems,\n\t\t\t\taddItem,\n\t\t\t\tremoveItem,\n\t\t\t\tclearItemFromCart,\n\t\t\t\tcartItemsCount,\n\t\t\t\tcartTotal\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</CartContext.Provider>\n\t);\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}